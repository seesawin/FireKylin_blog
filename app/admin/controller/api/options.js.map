{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/options.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAGE;;;;mBAIM,S;;;;;;;AACA,kB,GAAO,KAAK,GAAL,CAAS,MAAT,C;AACP,mB,GAAQ,KAAK,KAAL,CAAW,SAAX,C;;qBACQ,MAAM,UAAN,E;;;AAAhB,qB;;oBAED,SAAS,K;;;;;oBACP,QAAQ,eAAR,CAAwB,MAAxB,KAAmC,E;;;;;+CAC7B,KAAK,OAAL,CAAa;AAClB,6BAAa,qCAAqC,QAAQ,eADxC;AAElB,wBAAQ,QAAQ;AAFE,eAAb,C;;;AAKH,oB,GAAS,oBAAU,cAAV,CAAyB;AACpC,wBAAQ,EAD4B;AAEpC,sBAAM;AAF8B,eAAzB,C;+CAIN,KAAK,OAAL,CAAa;AAClB,6BAAa,OAAO,WADF;AAElB,wBAAQ,OAAO;AAFG,eAAb,C;;;;;;;oBAKD,SAAS,M;;;;;;qBACM,KAAK,YAAL,E;;;AAAnB,wB;AACA,oB,GAAS,KAAK,GAAL,CAAS,KAAT,IAAkB,WAAW,KAAK,GAAL,CAAS,KAAT,CAAX,CAAlB,GAAgD,sBAAc,UAAd,C;+CACtD,KAAK,OAAL,CAAa,MAAb,C;;;oBACC,SAAS,iB;;;;;+CACV,KAAK,OAAL,CAAa,QAAQ,eAAR,IAA2B,EAAxC,C;;;+CAEF,KAAK,OAAL,E;;;;;;;;;;;;;;;;;mBAGT,U,yBAAY;AACV,QAAI,OAAO,KAAK,GAAL,CAAS,MAAT,CAAX;AACA,QAAG,SAAS,SAAZ,EAAsB;AACpB,UAAI,OAAO,KAAK,IAAL,EAAX;AACA,UAAI,WAAW,oBAAU,IAAV,CAAe,MAAf,CAAsB;AACnC,gBAAQ,KAAK,MADsB;AAEnC,kBAAU,QAFyB;AAGnC,eAAO,KAAK,IAHuB;AAInC,gBAAQ;AAJ2B,OAAtB,CAAf;AAMA,aAAO,WAAW,KAAK,OAAL,EAAX,GAA4B,KAAK,IAAL,CAAU,8BAAV,CAAnC;AACD,KATD,MASO,IAAG,SAAS,MAAZ,EAAoB;AACzB,UAAI,QAAO,KAAK,IAAL,EAAX;AACA,aAAO,KAAK,YAAL,CAAkB,MAAK,MAAvB,EAA+B,KAA/B,CAAP;AACD;AACD,WAAO,gBAAM,UAAN,YAAiB,IAAjB,CAAP;AACD,G;AACD;;;;;;mBAIM,S;;;;;;;;AACA,kB,GAAO,KAAK,GAAL,CAAS,MAAT,C;AACP,kB,GAAO,KAAK,IAAL,E;;mBACR,MAAM,OAAN,CAAc,IAAd,C;;;;;gDACM,KAAK,IAAL,CAAU,YAAV,C;;;AAGL,mB,GAAQ,KAAK,KAAL,CAAW,SAAX,C;;oBACR,SAAS,M;;;;;AACN,gB,GAAe,I,CAAf,E;AAAO,kB,0CAAQ,I;gDACb,KAAK,YAAL,CAAkB,EAAlB,EAAsB,IAAtB,C;;;oBACE,QAAQ,iB;;;;;;qBACE,MAAM,aAAN,CAAoB,iBAApB,EAAuC,KAAK,EAA5C,C;;;AAAf,oB;;AACJ,mBAAK,OAAL,CAAa,MAAb;;;;;;qBAEmB,MAAM,aAAN,CAAoB,IAApB,C;;;AAAf,qB;;AACJ,mBAAK,OAAL,CAAa,OAAb;;;;;;;;;;;;;;;;;mBAIE,Y;;;;;;;AACA,kB,GAAO,KAAK,GAAL,CAAS,MAAT,C;;oBACP,SAAS,M;;;;;AACP,iB,GAAM,KAAK,GAAL,CAAS,KAAT,C;;mBACN,MAAM,OAAN,CAAc,GAAd,C;;;;;gDACK,KAAK,IAAL,CAAU,WAAV,C;;;gDAEF,KAAK,YAAL,CAAkB,GAAlB,EAAuB,IAAvB,C;;;gDAEA,gBAAM,YAAN,W;;;;;;;;;;;;;;;;;mBAIL,Y;;;;;;;;qBACgB,KAAK,KAAL,CAAW,SAAX,EAAsB,UAAtB,E;;;AAAhB,qB;gDACG,QAAQ,UAAR,IAAsB,E;;;;;;;;;;;;;;;;;mBAGzB,Y;6FAAa,G,EAAK,I;;;;;;;;qBACC,KAAK,YAAL,E;;;AAAnB,wB;;oBAGA,CAAC,GAAD,IAAQ,WAAW,cAAX,CAA0B,KAAK,MAA/B,C;;;;;gDACH,KAAK,IAAL,CAAU,WAAV,C;;;;AAGT;AACA,kBAAI,GAAJ,EAAU;AACR,uBAAO,WAAW,GAAX,CAAP;AACD;;AAED;;mBACI,I;;;;;AACF;AACK,iB,GAA0B,I,CAA1B,G;AAAK,oB,GAAqB,I,CAArB,M;AAAQ,uB,GAAa,I,CAAb,S;;qBACE,8BAAmB,GAAnB,EAAwB,MAAxB,EAAgC,SAAhC,CAAD,CAA6C,SAA7C,E;;;AAAf,sB;;mBACA,SAAO,K;;;;;gDACF,KAAK,IAAL,CAAU,sBAAV,EAAkC,SAAO,MAAzC,C;;;AAET,yBAAW,KAAK,MAAhB,IAA0B,IAA1B;;;;qBAGiB,KAAK,KAAL,CAAW,SAAX,EAAsB,aAAtB,CAAoC,YAApC,EAAkD,yBAAe,UAAf,CAAlD,C;;;AAAf,oB;gDACG,KAAK,OAAL,CAAa,MAAb,C",
    "file": "../../../../src/admin/controller/api/options.js",
    "sourcesContent": [
        "'use strict';\nimport Base from './base.js';\nimport speakeasy from 'speakeasy';\nimport push2Firekylin from 'push-to-firekylin';\n\nexport default class extends Base {\n  /**\n   * 获取\n   * @return {[type]} [description]\n   */\n  async getAction(){\n    let type = this.get('type');\n    let model = this.model('options');\n    let options = await model.getOptions();\n\n    if(type === '2fa'){\n      if(options.two_factor_auth.length === 32){\n        return this.success({\n          otpauth_url: 'otpauth://totp/firekylin?secret=' + options.two_factor_auth,\n          secret: options.two_factor_auth\n        })\n      }else{\n        let secret = speakeasy.generateSecret({\n          length: 20,\n          name: 'firekylin'\n        });\n        return this.success({\n          otpauth_url: secret.otpauth_url,\n          secret: secret.base32\n        });\n      }\n    } else if(type === 'push') {\n      let push_sites = await this.getPushSites();\n      let result = this.get('key') ? push_sites[this.get('key')] : Object.values(push_sites);\n      return this.success(result);\n    } else if(type === 'defaultCategory') {\n      return this.success(options.defaultCategory || '');\n    }\n    return this.success();\n  }\n\n  postAction(){\n    let type = this.get('type');\n    if(type === '2faAuth'){\n      let data = this.post();\n      let verified = speakeasy.totp.verify({\n        secret: data.secret,\n        encoding: 'base32',\n        token: data.code,\n        window: 2\n      });\n      return verified ? this.success() : this.fail('TWO_FACTOR_AUTH_ERROR_DETAIL');\n    } else if(type === 'push') {\n      let data = this.post();\n      return this.setPushSites(data.appKey, data);\n    }\n    return super.postAction(this);\n  }\n  /**\n   * 更新选项\n   * @return {[type]} [description]\n   */\n  async putAction(){\n    let type = this.get('type');\n    let data = this.post();\n    if(think.isEmpty(data)){\n      return this.fail('DATA_EMPTY');\n    }\n\n    let model = this.model('options');\n    if( type === 'push' ) {\n      let {id, ...site} = data;\n      return this.setPushSites(id, site);\n    } else if( type == 'defaultCategory') {\n      let result = await model.updateOptions('defaultCategory', data.id);\n      this.success(result);\n    } else {\n      let result = await model.updateOptions(data);\n      this.success(result);\n    }\n  }\n\n  async deleteAction() {\n    let type = this.get('type');\n    if( type === 'push' ) {\n      let key = this.get('key');\n      if( think.isEmpty(key) ) {\n        return this.fail('KEY_EMPTY');\n      }\n      return this.setPushSites(key, null);\n    } else {\n      return super.deleteAction();\n    }\n  }\n\n  async getPushSites() {\n    let options = await this.model('options').getOptions();\n    return options.push_sites || {};\n  }\n\n  async setPushSites(key, data) {\n    let push_sites = await this.getPushSites();\n\n    /** 新添加的 push_sites 要校验唯一性 **/\n    if( !key && push_sites.hasOwnProperty(data.appKey) ) {\n      return this.fail('KEY_EXIST');\n    }\n\n    /** 无论修改还是删除都把原来的删除掉 **/\n    if( key ) {\n      delete push_sites[key];\n    }\n\n    /** 无论是新增还是修改先将新的数据添加进去 **/\n    if( data ) {\n      /** 需要增加验证 key 正确性的请求 **/\n      let {url, appKey, appSecret} = data;\n      let result = await (new push2Firekylin(url, appKey, appSecret)).authorize();\n      if( result.errno ) {\n        return this.fail('APP_KEY_SECRET_ERROR', result.errmsg);\n      }\n      push_sites[data.appKey] = data;\n    }\n\n    let result = await this.model('options').updateOptions('push_sites', JSON.stringify(push_sites));\n    return this.success(result);\n  }\n}\n"
    ]
}