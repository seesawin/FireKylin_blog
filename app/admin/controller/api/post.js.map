{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/post.js"
    ],
    "names": [
        "modelInstance",
        "where",
        "type",
        "getAction",
        "self",
        "data",
        "id",
        "lastest",
        "find",
        "options",
        "JSON",
        "parse",
        "userInfo",
        "user_id",
        "get",
        "status",
        "keywords",
        "split",
        "indexOf",
        "is_public",
        "Number",
        "filter",
        "word",
        "length",
        "title",
        "map",
        "field",
        "order",
        "page",
        "countSelect",
        "success",
        "getBaseAction",
        "postAction",
        "post",
        "pathname",
        "select",
        "fail",
        "pushPost",
        "getTagIds",
        "tag",
        "getContentAndSummary",
        "getPostTime",
        "addPost",
        "insertId",
        "putAction",
        "markdown_content",
        "savePost",
        "rows",
        "affectedRows",
        "deleteAction",
        "deletePost",
        "postOpt",
        "canPush",
        "Array",
        "isArray",
        "push_sites",
        "think",
        "extend",
        "model",
        "getOptions",
        "push_sites_keys",
        "slice",
        "site_url",
        "hasOwnProperty",
        "http",
        "host",
        "cate",
        "pushes",
        "key",
        "appKey",
        "appSecret",
        "url",
        "p2fk",
        "push",
        "all",
        "result",
        "console",
        "log",
        "userId",
        "getLatest",
        "update_time",
        "datetime",
        "create_time",
        "content",
        "markdownToHtml",
        "summary",
        "toc",
        "replace",
        "tags",
        "setRelation",
        "tagIds",
        "promises",
        "name",
        "thenAdd",
        "encodeURIComponent",
        "then",
        "tag_id",
        "generateTocName",
        "trim",
        "toLowerCase",
        "test",
        "md5",
        "option",
        "highlight",
        "markedContent",
        "tocContent",
        "a",
        "b",
        "c",
        "language",
        "text",
        "highlightAuto",
        "undefined",
        "value"
    ],
    "mappings": "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",
    "file": "../../../../src/admin/controller/api/post.js",
    "sourcesContent": [
        "'use strict';\nimport marked from \"marked\";\nimport Base from './base.js';\nimport markToc from \"marked-toc\";\nimport highlight from 'highlight.js';\nimport push2Firekylin from 'push-to-firekylin';\n\nexport default class extends Base {\n  modelInstance = this.modelInstance.where({type: 0});\n  /**\n   * get\n   * @return {[type]} [description]\n   */\n  async getAction(self){\n    // this.modelInstance.field('id,user_id,type,status,title,pathname,create_time,update_time');\n    let data;\n    if( this.id ) {\n      if( this.id === 'lastest' ) {\n        return this.lastest();\n      }\n      data = await this.modelInstance.where({id: this.id}).find();\n      //文章选项\n      if(data.options){\n        data.options = JSON.parse(data.options) || {};\n      }else{\n        data.options = {};\n      }\n    } else {\n      let where = {};\n      //不是管理员，只显示个人的文章\n      if(this.userInfo.type !== 1){\n        where.user_id = this.userInfo.id;\n      }\n\n      if(this.get('status')) {\n        where.status = this.get('status');\n      }\n\n      if(this.get('keyword')) {\n        let keywords = this.get('keyword').split(/\\s+/g);\n        if( keywords.indexOf(':public') > -1 || keywords.indexOf(':private') > -1 ) {\n          where.is_public = Number(keywords.indexOf(':public') > -1);\n          keywords = keywords.filter(word => word !== ':public' && word !== ':private');\n        }\n        if(keywords.length > 0) {\n          where.title = [\"like\", keywords.map(word => `%${word}%`)];\n        }\n      }\n\n      let field = ['id', 'title', 'user_id', 'create_time', 'update_time', 'status', 'pathname'];\n      data = await this.modelInstance.where(where).field(field).order('id DESC').page( this.get('page'), 15 ).countSelect();\n    }\n    return this.success(data);\n  }\n\n  getBaseAction(self) {\n    return super.getAction(self);\n  }\n  /**\n   * add user\n   * @return {[type]} [description]\n   */\n  async postAction(){\n    let data = this.post();\n    //check pathname\n    let post = await this.modelInstance.where({pathname: data.pathname}).select();\n    if( post.length > 0 ) {\n      return this.fail('PATHNAME_EXIST');\n    }\n\n    /** 如果是编辑发布文章的话默认状态改为审核中 **/\n    if( data.status == 3 && this.userInfo.type != 1 ) {\n      data.status = 1;\n    }\n\n    /** 推送文章 **/\n    this.pushPost(data);\n\n    data.tag = await this.getTagIds(data.tag);\n    data = this.getContentAndSummary(data);\n    data.user_id = this.userInfo.id;\n    data = this.getPostTime(data);\n    data.options = data.options ? JSON.stringify(data.options) : '';\n\n    let insertId = await this.modelInstance.addPost(data);\n    return this.success({id: insertId});\n  }\n  /**\n   * update user info\n   * @return {[type]} [description]\n   */\n  async putAction(){\n    if (!this.id) {\n      return this.fail('PARAMS_ERROR');\n    }\n\n    let data = this.post();\n    data.id = this.id;\n\n    /** 判断接收的参数中是否有 markdown_content 来区别审核通过的状态修改和普通的文章更新 */\n    if( data.markdown_content ) {\n      /** 推送文章 */\n      this.pushPost(data);\n\n      data = this.getPostTime(data);\n      data = this.getContentAndSummary(data);\n      data.options = data.options ? JSON.stringify(data.options) : '';\n      if(data.tag) {\n        data.tag = await this.getTagIds(data.tag);\n      }\n    }\n\n    let rows = await this.modelInstance.savePost(data);\n    return this.success({affectedRows: rows});\n  }\n\n  async deleteAction() {\n    if(!this.id) {\n      return this.fail('PARAMS_ERROR');\n    }\n\n    /** 如果不是管理员且不是本文作者则无权限删除文章 **/\n    if(this.userInfo.type !== 1) {\n      let post = await this.modelInstance.where({id: this.id}).find();\n      if( post.user_id != this.userInfo.id ) {\n        return this.fail('USER_NO_PERMISSION');\n      }\n    }\n\n    await this.modelInstance.deletePost(this.id);\n    return this.success();\n  }\n\n  async pushPost(post) {\n    let postOpt = JSON.parse(post.options);\n    let canPush = Array.isArray(postOpt.push_sites) && postOpt.push_sites.length > 0;\n    if( post.status != 3 && post.is_public != 1 && !canPush ) {\n      return;\n    }\n    post = think.extend({}, post);\n\n    let options = await this.model('options').getOptions();\n    let push_sites = options.push_sites;\n    let push_sites_keys = postOpt.push_sites;\n\n    if( post.markdown_content.slice(0, 5) !== '> 原文：') {\n      let options = await this.model('options').getOptions();\n      let site_url = options.hasOwnProperty('site_url') ? options.site_url : `http://${this.http.host}`;\n      post.markdown_content = `> 原文：${site_url}/post/${post.pathname}.html\n\n${post.markdown_content}`;\n    }\n    delete post.cate;\n    delete post.options;\n\n    if(!Array.isArray(push_sites_keys)) { push_sites_keys = [push_sites_keys]; }\n    let pushes = push_sites_keys.map(key => {\n      let {appKey, appSecret, url} = push_sites[key];\n      let p2fk = new push2Firekylin(url, appKey, appSecret);\n      return p2fk.push(post);\n    });\n    let result = await Promise.all(pushes);\n    console.log('push result for debug: ', result);\n  }\n\n  async lastest() {\n    let userId = this.userInfo.type !== 1 ? this.userInfo.id : null;\n    let data = await this.modelInstance.getLatest(userId, 6);\n    return this.success(data);\n  }\n\n  getPostTime(data) {\n    data.update_time = think.datetime();\n    /**草稿可以没有创建时间**/\n    if( !data.create_time ) {\n      data.create_time = data.status != 0 ? data.update_time : null;\n    }else{\n      data.create_time = think.datetime(data.create_time);\n    }\n    return data;\n  }\n\n  /**\n   * 渲染 markdown \n   * 摘要为部分内容时不展示 TOC\n   */\n  getContentAndSummary(data) {\n    data.content = this.markdownToHtml(data.markdown_content);\n\n    data.summary = data.markdown_content.split('<!--more-->')[0];\n    if( data.summary === data.markdown_content ) {\n      data.summary = data.content;\n    } else {\n      data.summary = this.markdownToHtml(data.summary, {toc: false});\n    }\n    data.summary.replace(/<[>]*>/g, '');\n    \n    return data;\n  }\n\n  async getTagIds(tags) {\n    if(!tags){\n      return [];\n    }\n    if(!think.isArray(tags)){\n      tags = [tags];\n    }\n    let modelInstance = this.model('tag').setRelation(false), tagIds = [];\n    let promises = tags.map(name =>\n      modelInstance.where({name}).thenAdd({name, pathname: encodeURIComponent(name)}).then(data => tagIds.push({tag_id: data.id, name: name}))\n    );\n    await Promise.all(promises);\n    return tagIds;\n  }\n\n  /**\n   * generate toc name\n   * @param  {String} name []\n   * @return {String}      []\n   */\n  generateTocName(name){\n    name = name.trim().replace(/\\s+/g, '').replace(/\\)/g, '').replace(/[\\(\\,]/g, '-').toLowerCase();\n    if(/^[\\w\\-]+$/.test(name)){\n      return name;\n    }\n    return `toc-${think.md5(name).slice(0, 3)}`;\n  }\n  /**\n   * markdown to html\n   * @return {} []\n   */\n  markdownToHtml(content, option = {toc: true, highlight: true}){\n    let markedContent = marked(content);\n    \n    /**\n     * 增加 TOC 目录\n     */\n    if( option.toc ) {\n      let tocContent = marked(markToc(content)).replace(/<a\\s+href=\"#([^\\\"]+)\">([^<>]+)<\\/a>/g, (a, b, c) => {\n        return `<a href=\"#${this.generateTocName(c)}\">${c}</a>`;\n      });\n\n      markedContent = markedContent.replace(/<h(\\d)[^<>]*>(.*?)<\\/h\\1>/g, (a, b, c) => {\n        if(b == 2){\n          return `<h${b} id=\"${this.generateTocName(c)}\">${c}</h${b}>`;\n        }\n        return `<h${b} id=\"${this.generateTocName(c)}\"><a class=\"anchor\" href=\"#${this.generateTocName(c)}\"></a>${c}</h${b}>`;\n      });\n      markedContent = `<div class=\"toc\">${tocContent}</div>${markedContent}`;\n    }\n\n    /**\n     * 增加代码高亮\n     */\n    if( option.highlight ) {\n      markedContent = markedContent.replace(/<pre><code\\s*(?:class=\"lang-(\\w+)\")?>([\\s\\S]+?)<\\/code><\\/pre>/mg, (a, language, text) => {\n        text = text.replace(/&#39;/g, '\"').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/\\&quot;/g, '\"').replace(/\\&amp;/g, \"&\");\n        var result = highlight.highlightAuto(text, language ? [language] : undefined);\n        return `<pre><code class=\"hljs lang-${result.language}\">${result.value}</code></pre>`;\n      });\n    }\n    \n    return markedContent;\n  }\n\n}\n"
    ]
}